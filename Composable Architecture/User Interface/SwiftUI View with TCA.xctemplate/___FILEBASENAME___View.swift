//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import ComposableArchitecture
import SwiftUI

// MARK: - ___VARIABLE_storeName___

@Reducer
public struct ___VARIABLE_storeName___ {
  // MARK: Lifecycle

  public init() {}

  // MARK: Public

  public struct State: Equatable {}

  public enum Action: Equatable {}

  public var body: some Reducer<State, Action> {
    Reduce { _, _ in
      EmptyReducer()
    }
  }
}

// MARK: - ___VARIABLE_storeName___View

public struct ___VARIABLE_storeName___View: View {
  // MARK: Lifecycle

  public init(store: StoreOf<___VARIABLE_storeName___>) {
    self.store = store
  }

  // MARK: Public

  public let store: StoreOf<___VARIABLE_storeName___>

  public var body: some View {
    WithViewStore(self.store, observe: { $0 }) { _ in
      Text(/*@START_MENU_TOKEN@*/"Hello, World!"/*@END_MENU_TOKEN@*/)
    }
  }
}

#Preview {
  ___VARIABLE_storeName___View(
    store: .init(),
    reducer: {
      ___VARIABLE_storeName___()
    }
  )
}
